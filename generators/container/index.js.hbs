{{#if addRedux}}
import React from 'react'
import PropTypes from 'prop-types'

import { bindActionCreators } from 'redux'
import { connect } from 'react-redux'
import * as {{ actionsFile }} from '../actions/{{ actionsFile }}'
{{/if}}

{{#if addSelectors}}
import { createStructuredSelector, createSelector } from 'reselect'
{{/if}}
{{#unless addRedux}}
import React from 'react'
import PropTypes from 'prop-types'
{{/unless}}

class {{ properCase name }} extends React.{{{ component }}} {

  static propTypes = {

  }

  render() {
    return (
      <div>
      </div>
    )
  }
}

{{#if addRedux}}
{{#if addSelectors}}
// Change prop to the state part you need as a prop
const mapStateToProps = createStructuredSelector({
  prop: createSelector(
    (state) => state.prop,
    (propState) => propState
  ),
})
{{/if}}
{{#unless addSelectors}}
function mapStateToProps (state) {
  return {

  }
}
{{/unless}}

function mapDispatchToProps (dispatch) {
  return bindActionCreators({{ actionsFile }}, dispatch)
}

export default connect(
  mapStateToProps,
  mapDispatchToProps,
)({{ properCase name }})
{{/if}}
{{#unless addRedux}}
export default {{ properCase name }}
{{/unless}}
